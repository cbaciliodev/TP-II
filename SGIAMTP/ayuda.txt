/***/
guardarUsuarioRegistros(funcion, ...data) {

        var action = data[0];

        var response = new Array({

            identificacion_user: data[1],
            nombre_user: data[2],
            apaterno_user: data[3],
            amaterno_user: data[4],
            nacimiento_user: data[5],
            password_user: data[6],
            sexo_user: data[7],
            categoria_user: data[8],
            imagen_user: data[9],
            academia_user: data[10]
        });

        alert(data[0]);
        alert(action);

        if (data[0] == "") {
            console.log('falta accion');
        } else {

            $.post(
                action,
                {
                    response, funcion

                }, (response) => {
                    if ("1" == response[0].code) {
                        this.restablecer()
                    } else {
                        document.getElementById("mensaje").innerHTML = "No se puede guardar el usuario";
                    }
                }
            );
        }
    }


    restablecer() {
        document.getElementById('identificacion').value = "";
        document.getElementById('nombre').value = "";
        document.getElementById('apaterno').value = "";
        document.getElementById('amaterno').value = "";
        document.getElementById('nacimiento').value = "";
        document.getElementById('password').value = "";
        document.getElementById('sexo').value = "";
        document.getElementById('categoria').value = "";
        document.getElementById('imagen').value = "";
        document.getElementById('academia').value = "";
    }


/***/


Scaffold-DbContext "Server=sql5047.site4now.net;Database=DB_A4F05E_SGIAMTP;User Id=DB_A4F05E_SGIAMTP_admin;Password=123456789gg;MultipleActiveResultSets=True;" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models











using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace SGIAMTP.Models
{
    public partial class TUsuarioModalidad
    {
        public TUsuarioModalidad()
        {
            TUsuarioModalidadTanda = new HashSet<TUsuarioModalidadTanda>();
        }

        public int PkIumCodUm { get; set; }
        [Required(ErrorMessage = "Campo Requerido")]
        [DisplayName("Participante")]
        public int FkIuDni { get; set; }


        [Required(ErrorMessage = "Campo Requerido")]
        [DisplayName("Concurso")]
        public int FkIcIdConcurso { get; set; }


        [Required(ErrorMessage = "Campo Requerido")]
        [DisplayName("Modalidad")]
        public int FkImIdModalidad { get; set; }


        [RegularExpression(@"^[a-zA-Z]+[ a-zA-Z-_]*$", ErrorMessage = "Solo letras")]
        public string IumFase { get; set; }


        //[Required(ErrorMessage = "Campo Requerido")]
        //[DisplayName("Pareja")]
        public int? FkIuDniPareja { get; set; }


        [Required(ErrorMessage = "Campo Requerido")]
        [DisplayName("Fecha de Inscripci√≥n")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        public DateTime DumFechaIns { get; set; }
        [Required(ErrorMessage = "Campo Requerido")]
        public string VmUmArchivoDni { get; set; }
        [Required(ErrorMessage = "Campo Requerido")]
        public string VmUmArchivoB { get; set; }

        public TConcurso FkIcIdConcursoNavigation { get; set; }
        public TModalidadCon FkImIdModalidadNavigation { get; set; }
        public TUsuario FkIuDniNavigation { get; set; }
        public TUsuario FkIuDniParejaNavigation { get; set; }
        public ICollection<TUsuarioModalidadTanda> TUsuarioModalidadTanda { get; set; }
    }
}
